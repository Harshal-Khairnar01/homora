generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  favorite       String[]
  accounts       Account[]
  listings       Listing[]
  reservations   Reservation[]
}

model Listing {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  // this means a villa or a house of an user
  title         String
  description   String?
  imageSrc      String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  category      String
  roomCount     Int
  childCount    Int
  guestCount    Int
  locationValue String
  price         Int
  User          User?         @relation(fields: [userId], references: [id])
  userId        String?       @db.ObjectId
  reservations  Reservation[]
}

model Reservation {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  // this means a simple booking of a villa for a user
  User      User?   @relation(fields: [userId], references: [id])
  userId    String? @db.ObjectId
  listingId String  @db.ObjectId
  listing   Listing @relation(fields: [listingId], references: [id])

  startDate  DateTime
  endTime    DateTime
  totalPrice Int
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerType      String
  providerId        String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  token_type        String?
  scope             String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])

}

